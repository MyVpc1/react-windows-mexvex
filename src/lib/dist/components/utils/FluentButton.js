"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,require("core-js/modules/web.dom-collections.iterator.js");class FluentButton{constructor(a,b){let{outerReveal:c}=b;this.rootEl="string"==typeof a?document.querySelector(a):a;FluentButton.elements.has(this.rootEl)||(FluentButton.elements.add(this.rootEl),this.el=this.rootEl.firstElementChild,this.el.addEventListener("touchstart",this.startRipple),this.el.addEventListener("mousedown",this.startRipple),this.el.onmousedown=this.el.ontouchstart=this.addPressedState,this.el.onmouseup=this.el.onmouseleave=this.el.ontouchend=this.removePressedState,c?(FluentButton.outerRevealElements.set(this.el,this.getElementDimensions(this.el)),!FluentButton.observingOuterReveal&&this.observeOuterReveal()):this.el.onmousemove=this.updateCoordinates)}updateCoordinates(a){let{pageX:b,pageY:c,currentTarget:d}=a;const e=b-d.offsetLeft,f=c-d.offsetTop;return d.style.setProperty("--x","".concat(e,"px")),d.style.setProperty("--y","".concat(f,"px")),{x:e,y:f}}startRipple(a){let{currentTarget:b}=a;// remove prev
// Add again to (re)start animation
b.classList.remove("app-fluent--ripple"),setTimeout(()=>b.classList.add("app-fluent--ripple"),25)}observeOuterReveal(){FluentButton.observingOuterReveal=!0,window.addEventListener("resize",this.updateElementDimensions.bind(this)),window.addEventListener("mousemove",a=>{window.requestAnimationFrame(this.updateOuterReveal.bind(this,a))}),window.addEventListener("touchmove",a=>{let{touches:b}=a;const[{clientX:c,clientY:d}]=b;window.requestAnimationFrame(this.updateOuterReveal.bind(this,{pageX:c,pageY:d}))})}updateOuterReveal(a){let{pageX:b,pageY:c}=a;for(const[d,{width:e,height:f}]of FluentButton.outerRevealElements){const{x:a,y:g}=this.updateCoordinates({pageX:b,pageY:c,currentTarget:d});this.isInRevealThreshold({x:a,y:g,width:e,height:f})?d.classList.add("app-fluent--reveal"):d.classList.remove("app-fluent--reveal")}}isInRevealThreshold(a){let{x:b,y:c,width:d,height:e}=a;const f=FluentButton.outerRevealThreshold;return b>-f&&b<d+f&&c>-f&&c<e+f}getElementDimensions(a){const{width:b,height:c}=a.getBoundingClientRect();return{width:b,height:c}}updateElementDimensions(){for(const[a]of FluentButton.outerRevealElements)FluentButton.outerRevealElements.set(a,this.getElementDimensions(a))}destroy(){FluentButton.outerRevealElements.delete(this.el),FluentButton.elements.delete(this.rootEl)}}exports.default=FluentButton;function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}/* *** */_defineProperty(FluentButton,"elements",new Set),_defineProperty(FluentButton,"outerRevealElements",new Map),_defineProperty(FluentButton,"outerRevealThreshold",15),_defineProperty(FluentButton,"observingOuterReveal",!1);